#########################################################
## basic
#########################################################
export PATH=$HOME/bin:$HOME/opt/radrails/:$HOME/opt/nginx/sbin/:$PATH

# Reset
Bash_Color_Off='\[\e[0m\]'       # Text Reset

# Regular Colors
Bash_Black='\[\e[0;30m\]'        # Black
Bash_Red='\[\e[0;31m\]'          # Red
Bash_Green='\[\e[0;32m\]'        # Green
Bash_Yellow='\[\e[0;33m\]'       # Yellow
Bash_Blue='\[\e[0;34m\]'         # Blue
Bash_Purple='\[\e[0;35m\]'       # Purple
Bash_Cyan='\[\e[0;36m\]'         # Cyan
Bash_White='\[\e[0;37m\]'        # White

# Bold
Bash_BBlack='\[\e[1;30m\]'       # Black
Bash_BRed='\[\e[1;31m\]'         # Red
Bash_BGreen='\[\e[1;32m\]'       # Green
Bash_BYellow='\[\e[1;33m\]'      # Yellow
Bash_BBlue='\[\e[1;34m\]'        # Blue
Bash_BPurple='\[\e[1;35m\]'      # Purple
Bash_BCyan='\[\e[1;36m\]'        # Cyan
Bash_BWhite='\[\e[1;37m\]'       # White

# Underline
Bash_UBlack='\[\e[4;30m\]'       # Black
Bash_URed='\[\e[4;31m\]'         # Red
Bash_UGreen='\[\e[4;32m\]'       # Green
Bash_UYellow='\[\e[4;33m\]'      # Yellow
Bash_UBlue='\[\e[4;34m\]'        # Blue
Bash_UPurple='\[\e[4;35m\]'      # Purple
Bash_UCyan='\[\e[4;36m\]'        # Cyan
Bash_UWhite='\[\e[4;37m\]'       # White

# Background
Bash_On_Black='\[\e[40m\]'       # Black
Bash_On_Red='\[\e[41m\]'         # Red
Bash_On_Green='\[\e[42m\]'       # Green
Bash_On_Yellow='\[\e[43m\]'      # Yellow
Bash_On_Blue='\[\e[44m\]'        # Blue
Bash_On_Purple='\[\e[45m\]'      # Purple
Bash_On_Cyan='\[\e[46m\]'        # Cyan
Bash_On_White='\[\e[47m\]'       # White

# High Intensty
Bash_IBlack='\[\e[0;90m\]'       # Black
Bash_IRed='\[\e[0;91m\]'         # Red
Bash_IGreen='\[\e[0;92m\]'       # Green
Bash_IYellow='\[\e[0;93m\]'      # Yellow
Bash_IBlue='\[\e[0;94m\]'        # Blue
Bash_IPurple='\[\e[0;95m\]'      # Purple
Bash_ICyan='\[\e[0;96m\]'        # Cyan
Bash_IWhite='\[\e[0;97m\]'       # White

# Bold High Intensty
Bash_BIBlack='\[\e[1;90m\]'      # Black
Bash_BIRed='\[\e[1;91m\]'        # Red
Bash_BIGreen='\[\e[1;92m\]'      # Green
Bash_BIYellow='\[\e[1;93m\]'     # Yellow
Bash_BIBlue='\[\e[1;94m\]'       # Blue
Bash_BIPurple='\[\e[1;95m\]'     # Purple
Bash_BICyan='\[\e[1;96m\]'       # Cyan
Bash_BIWhite='\[\e[1;97m\]'      # White

# High Intensty backgrounds
Bash_On_IBlack='\[\e[0;100m\]'   # Black
Bash_On_IRed='\[\e[0;101m\]'     # Red
Bash_On_IGreen='\[\e[0;102m\]'   # Green
Bash_On_IYellow='\[\e[0;103m\]'  # Yellow
Bash_On_IBlue='\[\e[0;104m\]'    # Blue
Bash_On_IPurple='\[\e[10;95m\]'  # Purple
Bash_On_ICyan='\[\e[0;106m\]'    # Cyan
Bash_On_IWhite='\[\e[0;107m\]'   # White

BASH_NEWLINE="\n"

[ -f ~/.git-completion.bash ] && . ~/.git-completion.bash

export PS1='\n\[\e[0;92m\]\d \t \u@\h\n\w\n\[\e[0;33m\]$(__git_ps1)\n\[\e[0;92m\]\$\[\e[0m\] '

export EDITOR=vi
export VISUAL=vi

alias hi='history | less +G'
alias vimrc='vim ~/.vimrc'
alias grep='grep -E -a --color=auto'
alias be='bundle exec'
alias be_rs='bundle exec rails server'
alias be_rc='bundle exec rails console'
alias brails='bundle exec rails'
alias brake='bundle exec rake'

# edit my bashrc and(or) reload it
edit_bashrc()
{
    vim "$HOME/.bashrc_xfun68"
    return $?
}

source_bashrc()
{
    sys_bashrc_file="$HOME/.bashrc"
    echo "source $sys_bashrc_file ..."
    source "$sys_bashrc_file"
    result=$?
    echo "done"
    return $result
}

mybashrc()
{
    case "$1" in
        "-e" )
            edit_bashrc
            ;;
        "-l" )
            source_bashrc
            ;;
        *    )
            edit_bashrc
            source_bashrc
            ;;
    esac

    return 0
}

# kill a process using the PID from 'cat xxx.pid'
kc()
{
    if [ -n "$2" ] ; then
        kill "$2" `cat ${1:-"cat_not_found_pid_file"}.pid`
    else
        kill `cat ${1:-"cat_not_found_pid_file"}.pid`
    fi
}

# tail last file
tl()
{
    tail -n${2:-100} -f `ls ${1:-*}* | tail -n1`
}

# edit README file and convert it to html and show it in google-chrome
readme()
{
    vi README ; markdown README > README.html && google-chrome README.html
}

daka()
{
    if (($# != 2)); then
        echo "Usage: $0 <passport> <password>";
        return 1;
    fi
    passport=${1};
    password=${2};
    ssh 89 "curl 'http://192.168.41.191/apl/login/Login.wa?do=login' -d '_environment=&passport=${passport}&password=${password}&login_type=N'"
    retcode=$?;
    date >> ~/.daka-robot.log
    echo "Daka for $passport/$password, result is '$retcode'." >> ~/.daka-robot.log
    echo "" >> ~/.daka-robot.log
    return $retcode;
}

random_num_between()
{
    min=${1:-0}
    max=${2:-100}
    diff=$max-$min+1
    random_num=$(date +%s%N)
    ((retnum=random_num%diff+min))
    echo $retnum
}

cgrep()
{
    GREP_COLOR="1;3$((RANDOM%6+1))" grep --color=always "$@"
}

d2b()
{
    echo "obase=2; ibase=10; `echo $@ | tr a-z A-Z`" | bc
}
d2o()
{
    echo "obase=8; ibase=10; `echo $@ | tr a-z A-Z`" | bc
}
d2h()
{
    echo "obase=16; ibase=10; `echo $@ | tr a-z A-Z`" | bc
}

b2d()
{
    echo "obase=10; ibase=2; `echo $@ | tr a-z A-Z`" | bc
}

o2d()
{
    echo "obase=10; ibase=8; `echo $@ | tr a-z A-Z`" | bc
}

h2d()
{
    echo "obase=10; ibase=16; `echo $@ | tr a-z A-Z`" | bc
}

#########################################################
## history
#########################################################
export HISTSIZE=10000
export HISTFILESIZE=20000
export HISTTIMEFORMAT="%Y-%m-%d %H:%M:%S "

#########################################################
## ssh
#########################################################
SSH_ENV="$HOME/.ssh/environment"

function start_agent {
    echo "Initializing new SSH agent..."
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    echo succeeded
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
    /usr/bin/ssh-add;
}

# Source SSH settings, if applicable
# if [ -f "${SSH_ENV}" ]; then
#    . "${SSH_ENV}" > /dev/null
#     #ps ${SSH_AGENT_PID} doesn't work under cywgin
#     ps -uax | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
#     start_agent;
#     }
# else
#     start_agent;
# fi

#########################################################
## ibus
#########################################################
export GTK_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=ibus

#########################################################
## SVN
#########################################################
export SVN_EDITOR=vim

alias sll='svn log | less'
svnurl()
{
    SVNURL=$(svn info | grep "URL:\s*svn" | cut -d " " -f 2)
    echo $SVNURL
}

sdl()
{
	case "$TERM" in
		msys)
		CONTEXT_COLOR=""
		ADD_COLOR=""
		DELETE_COLOR=""
		LOCATION_COLOR=""
		INDEX_COLOR=""
		NORM_COLOR=""
		;;
	*)
		CONTEXT_COLOR=`tput setaf 7`
		ADD_COLOR=`tput setaf 2`
		DELETE_COLOR=`tput setaf 1`
		LOCATION_COLOR=`tput setaf 6`
		FILE_COLOR=`tput setaf 3`
		INDEX_COLOR=`tput setaf 5`
		NORM_COLOR=`tput sgr0`
		;;
	esac

		svn diff $* |
		sed -e "s/^+[^+].*/${ADD_COLOR}&${NORM_COLOR}/g" \
		-e "s/^-[^-].*/${DELETE_COLOR}&${NORM_COLOR}/g" \
		-e "s/^[-+]\{3\}.*/${FILE_COLOR}&${FILE_COLOR}/g" \
		-e "s/^@@.*/${LOCATION_COLOR}&${NORM_COLOR}/g" \
		-e "s/^[iI]ndex.*/${INDEX_COLOR}&${NORM_COLOR}/g" \
		-e "s/.*/${CONTEXT_COLOR}&${NORM_COLOR}/g" \
		-e "s/\r//g" |
		${PAGER:-less -QRS}
}

#########################################################
## Graphviz
#########################################################
dot2svg()
{
    if [[ -z "$1" ]]; then
        return 1;
    fi

    filename=$1; vi "$filename"; dot -Tsvg "$filename" -O && eog "$filename.svg"
}

fdp2svg()
{
    if [[ -z "$1" ]]; then
        return 1;
    fi

    filename=$1; vi "$filename"; fdp -Tsvg "$filename" -O && eog "$filename.svg"
}

#########################################################
## rvm, should be always at the end of this file
#########################################################
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
[[ -r $rvm_path/scripts/completion ]] && source "$rvm_path/scripts/completion"

