#########################################################
## basic
#########################################################
export PATH=$HOME/bin:$PATH
export PS1="\[\e[32;1m\]\d \t\n\u:\n\w\n\n\$ \[\e[0m\]"

alias hi='history | less +G'
alias vimrc='vim ~/.vimrc'
alias grep='grep -E -a --color=auto'

# edit my bashrc and(or) reload it
edit_bashrc()
{
    vim "$HOME/.bashrc_xfun68"
    return $?
}

source_bashrc()
{
    sys_bashrc_file="$HOME/.bashrc"
    echo "source $sys_bashrc_file ..."
    source "$sys_bashrc_file"
    result=$?
    echo "done"
    return $result
}

mybashrc()
{
    case "$1" in
        "-e" )
            edit_bashrc
            ;;
        "-l" )
            source_bashrc
            ;;
        *    )
            edit_bashrc
            source_bashrc
            ;;
    esac

    return 0
}

# kill a process using the PID from 'cat xxx.pid'
kc()
{
    if [ -n "$2" ] ; then
        kill "$2" `cat ${1:-"cat_not_found_pid_file"}.pid`
    else
        kill `cat ${1:-"cat_not_found_pid_file"}.pid`
    fi
}

# tail last file
tl()
{
    tail -n${2:-100} -f `ls ${1:-*}* | tail -n1`
}

# edit README file and convert it to html and show it in google-chrome
readme()
{
    vi README ; markdown README > README.html && google-chrome README.html
}

#########################################################
## history
#########################################################
export HISTSIZE=10000
export HISTFILESIZE=20000
export HISTTIMEFORMAT="%Y-%m-%d %H:%M:%S "

#########################################################
## ssh
#########################################################
SSH_ENV="$HOME/.ssh/environment"

function start_agent {
    echo "Initializing new SSH agent..."
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    echo succeeded
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
    /usr/bin/ssh-add;
}

# Source SSH settings, if applicable
if [ -f "${SSH_ENV}" ]; then
    . "${SSH_ENV}" > /dev/null
    #ps ${SSH_AGENT_PID} doesn't work under cywgin
    ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
    start_agent;
    }
else
    start_agent;
fi

#########################################################
## ibus
#########################################################
export GTK_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=ibus

#########################################################
## SVN
#########################################################
export SVN_EDITOR=vim

alias sll='svn log | less'
svnurl()
{
    SVNURL=$(svn info | grep "URL:\s*svn" | cut -d " " -f 2)
    echo $SVNURL
}

sdl()
{
	case "$TERM" in
		msys)
		CONTEXT_COLOR=""
		ADD_COLOR=""
		DELETE_COLOR=""
		LOCATION_COLOR=""
		INDEX_COLOR=""
		NORM_COLOR=""
		;;
	*)
		CONTEXT_COLOR=`tput setaf 7`
		ADD_COLOR=`tput setaf 2`
		DELETE_COLOR=`tput setaf 1`
		LOCATION_COLOR=`tput setaf 6`
		FILE_COLOR=`tput setaf 3`
		INDEX_COLOR=`tput setaf 5`
		NORM_COLOR=`tput sgr0`
		;;
	esac

		svn diff $* |
		sed -e "s/^+[^+].*/${ADD_COLOR}&${NORM_COLOR}/g" \
		-e "s/^-[^-].*/${DELETE_COLOR}&${NORM_COLOR}/g" \
		-e "s/^[-+]\{3\}.*/${FILE_COLOR}&${FILE_COLOR}/g" \
		-e "s/^@@.*/${LOCATION_COLOR}&${NORM_COLOR}/g" \
		-e "s/^[iI]ndex.*/${INDEX_COLOR}&${NORM_COLOR}/g" \
		-e "s/.*/${CONTEXT_COLOR}&${NORM_COLOR}/g" \
		-e "s/\r//g" |
		${PAGER:-less -QRS}
}

#########################################################
## Graphviz
#########################################################
dot2svg()
{
    if [[ -z "$1" ]]; then
        return 1;
    fi

    filename=$1; vi "$filename"; dot -Tsvg "$filename" -O && eog "$filename.svg"
}

fdp2svg()
{
    if [[ -z "$1" ]]; then
        return 1;
    fi

    filename=$1; vi "$filename"; fdp -Tsvg "$filename" -O && eog "$filename.svg"
}

#########################################################
## rvm, should be always at the end of this file
#########################################################
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
[[ -r $rvm_path/scripts/completion ]] && source "$rvm_path/scripts/completion"

